[build-system]
requires = ["mina-build>=0.2.5"]
build-backend = "pdm.backend"

#[build-system]
#requires = ["pdm-backend", "pdm-polylith-workspace"]
#build-backend = "pdm.backend"

[project]
authors = [{ name = "fluentqa", email = "fluentqa@fluent-qa.com" }]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
description = "A Simple Configuration Python Project"
dynamic = ["version"]
keywords = [
    "python configuration",
    "pydantic",
    "easy settings management",
    "dynaconf",
    "dotenv"
]
license = { text = "UNDEFINED" }
name = "qpyconf"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "dynaconf>=3.2.5",
    "pydantic>=2.7.4",
]

[project.urls]
issue = "https://github.com/fluent-qa/qpyconf/issues"
repository = "https://github.com/fluent-qa/qpyconf"

[tool.pytest.ini_options]
addopts = "-l -s --durations=0"
log_cli = true
log_cli_level = "info"
log_date_format = "%Y-%m-%d %H:%M:%S"
log_format = "%(asctime)s %(levelname)s %(message)s"
minversion = "6.0"
pythonpath = ["src"]

[tool.coverage]

[tool.coverage.report]
fail_under = 50

[tool.coverage.run]
source = ["src/qpyconf"]


[tool.ruff]
extend-exclude = ["template"]
fix = true
src = ["src"]

[tool.ruff.lint]
select = [
    "B",      # flake8-bugbear
    "D",      # pydocstyle
    "E",      # pycodestyle error
    "F",      # Pyflakes
    "I",      # isort
    "RUF100", # Unused noqa directive
    "S",      # flake8-bandit
    "SIM",    # flake8-simplify
    "UP",     # pyupgrade
    "W",      # pycodestyle warning
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]

[tool.ruff.lint.pydocstyle]
convention = "google"


[tool.tomlsort]
all = true
in_place = true
trailing_comma_inline_array = true

[tool.pdm]
distribution = true
include = ["src"]

[tool.pdm.scripts]
lint = "ruff ."
fmt = "ruff format . --check"
test = "pytest --cov-report term --cov=qpyconf tests/"
cov_report = "pytest --cov-report html --cov=qpyconf tests/"
cov_badge = "coverage-badge -f -o coverage.svg"
docs = "mkdocs serve"
docs-deploy = "mkdocs gh-deploy --force"
cleanup = "sh scripts/cleanup.sh"


[tool.pdm.dev-dependencies]
lint = ["ruff>=0.4.9"]
test = ["pytest-cov>=5.0.0", "pytest>=8.2.2"]


# [[tool.pdm.source]]
# name = "mirrors"
# url = "https://pypi.tuna.tsinghua.edu.cn/simple/"

# [[tool.pdm.source]]
# name = "douban"
# url = "https://pypi.doubanio.com/simple/"
